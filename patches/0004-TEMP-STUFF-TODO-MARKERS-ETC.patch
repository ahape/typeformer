From ea62709a7a989a8bd042c1aff5f3f2c995f2b797 Mon Sep 17 00:00:00 2001
From: Eli Barzilay <eli@barzilay.org>
Date: Thu, 28 Oct 2021 13:26:41 -0400
Subject: [PATCH 4/4] TEMP STUFF - TODO MARKERS ETC

---
 Gulpfile.js                                               | 3 +++
 package.json                                              | 1 +
 scripts/bisect-test.ts                                    | 2 ++
 src/compiler/sys.ts                                       | 2 +-
 src/harness/virtualFileSystemWithWatch.ts                 | 2 +-
 src/server/project.ts                                     | 8 ++++----
 .../parser/ecmascript5/RealWorld/parserharness.ts         | 2 +-
 7 files changed, 13 insertions(+), 7 deletions(-)

diff --git a/Gulpfile.js b/Gulpfile.js
index 6dc97369b3..edf1cebb00 100644
--- a/Gulpfile.js
+++ b/Gulpfile.js
@@ -19,6 +19,7 @@ const cmdLineOptions = require("./scripts/build/options");
 
 const copyright = "CopyrightNotice.txt";
 const testRoot = "built/local/testRunner/Harness.js";
+//!!! const testRoot = "built/local/run.js";
 const cleanTasks = [];
 
 const buildScripts = () => buildProject("scripts");
@@ -126,6 +127,7 @@ const localPreBuild = parallel(generateLibs, series(buildScripts, generateDiagno
 const preBuild = cmdLineOptions.lkg ? lkgPreBuild : localPreBuild;
 
 const buildServices = (() => {
+    return cb => { console.log("!!!TODO!!! buildServices"); cb(); };
     // build typescriptServices.out.js
     const buildTypescriptServicesOut = () => buildProject("src/typescriptServices/tsconfig.json", cmdLineOptions);
 
@@ -250,6 +252,7 @@ task("watch-min").flags = {
 };
 
 const buildLssl = (() => {
+    return cb => { console.log("!!!TODO!!! buildLssl"); cb(); };
     // build tsserverlibrary.out.js
     const buildServerLibraryOut = () => buildProject("src/tsserverlibrary/tsconfig.json", cmdLineOptions);
 
diff --git a/package.json b/package.json
index 92afe19ddf..9b6e8c7343 100644
--- a/package.json
+++ b/package.json
@@ -66,6 +66,7 @@
         "convert-source-map": "latest",
         "del": "5.1.0",
         "diff": "^4.0.2",
+        "esbuild": "^0.14.11",
         "eslint": "7.12.1",
         "eslint-formatter-autolinkable-stylish": "1.1.4",
         "eslint-plugin-import": "2.22.1",
diff --git a/scripts/bisect-test.ts b/scripts/bisect-test.ts
index a3e48b29a8..52668a849a 100644
--- a/scripts/bisect-test.ts
+++ b/scripts/bisect-test.ts
@@ -1,3 +1,5 @@
+//!!! should this be updated or removed?
+
 /**
  * You should have ts-node installed globally before executing this, probably!
  * Otherwise you'll need to compile this script before you start bisecting!
diff --git a/src/compiler/sys.ts b/src/compiler/sys.ts
index d9cb5d7ff9..143cda7a59 100644
--- a/src/compiler/sys.ts
+++ b/src/compiler/sys.ts
@@ -1251,7 +1251,7 @@ export let sys: System = (() => {
                 }
             },
             getExecutingFilePath() {
-                return __filename;
+                return __filename; //!!!
             },
             getCurrentDirectory,
             getDirectories,
diff --git a/src/harness/virtualFileSystemWithWatch.ts b/src/harness/virtualFileSystemWithWatch.ts
index d405ebf922..973e75e6dc 100644
--- a/src/harness/virtualFileSystemWithWatch.ts
+++ b/src/harness/virtualFileSystemWithWatch.ts
@@ -29,7 +29,7 @@ export const safeList = {
     })
 };
 
-function getExecutingFilePathFromLibFile(): string {
+function getExecutingFilePathFromLibFile(): string { //!!!
     return combinePaths(getDirectoryPath(libFile.path), "tsc.js");
 }
 
diff --git a/src/server/project.ts b/src/server/project.ts
index 54e520b6b7..d3ab080f53 100644
--- a/src/server/project.ts
+++ b/src/server/project.ts
@@ -1497,8 +1497,8 @@ export abstract class Project implements LanguageServiceHost, ModuleResolutionHo
         // Search any globally-specified probe paths, then our peer node_modules
         const searchPaths = [
           ...this.projectService.pluginProbeLocations,
-          // ../../.. to walk from X/node_modules/typescript/lib/tsserver.js to X/node_modules/
-          combinePaths(this.projectService.getExecutingFilePath(), "../../.."),
+          // ../../.. to walk from X/node_modules/typescript/lib/tsserver.js to X/node_modules/ //!!!
+          combinePaths(this.projectService.getExecutingFilePath(), "../../.."), //!!!
         ];
 
         if (this.projectService.globalPlugins) {
@@ -2220,8 +2220,8 @@ export class ConfiguredProject extends Project {
         }
 
         // Search our peer node_modules, then any globally-specified probe paths
-        // ../../.. to walk from X/node_modules/typescript/lib/tsserver.js to X/node_modules/
-        const searchPaths = [combinePaths(this.projectService.getExecutingFilePath(), "../../.."), ...this.projectService.pluginProbeLocations];
+        // ../../.. to walk from X/node_modules/typescript/lib/tsserver.js to X/node_modules/ //!!!
+        const searchPaths = [combinePaths(this.projectService.getExecutingFilePath(), "../../.."), ...this.projectService.pluginProbeLocations]; //!!!
 
         if (this.projectService.allowLocalPluginLoads) {
             const local = getDirectoryPath(this.canonicalConfigFilePath);
diff --git a/tests/cases/conformance/parser/ecmascript5/RealWorld/parserharness.ts b/tests/cases/conformance/parser/ecmascript5/RealWorld/parserharness.ts
index 4cb9c6cb75..1f0db4ff67 100644
--- a/tests/cases/conformance/parser/ecmascript5/RealWorld/parserharness.ts
+++ b/tests/cases/conformance/parser/ecmascript5/RealWorld/parserharness.ts
@@ -37,7 +37,7 @@ function filePath(fullPath: string) {
     return path.join("/") + "/";
 }
 
-var typescriptServiceFileName = filePath(IO.getExecutingFilePath()) + "typescriptServices.js";
+var typescriptServiceFileName = filePath(IO.getExecutingFilePath()) + "typescriptServices.js"; //!!!
 var typescriptServiceFile = IO.readFile(typescriptServiceFileName);
 if (typeof ActiveXObject === "function") {
     eval(typescriptServiceFile);
-- 
2.35.1

