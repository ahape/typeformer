From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Bailey <5341706+jakebailey@users.noreply.github.com>
Date: Tue, 27 Sep 2022 22:40:35 -0700
Subject: [PATCH] Remove
 configureLanguageServiceBuild/createLanguageServiceBuild

The filename and the task mismatched, so this script was never
technically runnable as expected, and I don't think anyone was actually
using it.
---
 Gulpfile.js                              |  4 --
 scripts/configureLanguageServiceBuild.ts | 87 ------------------------
 2 files changed, 91 deletions(-)
 delete mode 100644 scripts/configureLanguageServiceBuild.ts

diff --git a/Gulpfile.js b/Gulpfile.js
index f34e61427c..a5a8e303b5 100644
--- a/Gulpfile.js
+++ b/Gulpfile.js
@@ -657,10 +657,6 @@ const configureExperimental = () => exec(process.execPath, ["scripts/configurePr
 task("configure-experimental", series(buildScripts, configureExperimental));
 task("configure-experimental").description = "Runs scripts/configurePrerelease.ts to prepare a build for experimental publishing";
 
-const createLanguageServicesBuild = () => exec(process.execPath, ["scripts/createLanguageServicesBuild.js"]);
-task("create-language-services-build", series(buildScripts, createLanguageServicesBuild));
-task("create-language-services-build").description = "Runs scripts/createLanguageServicesBuild.ts to prepare a build which only has the require('typescript') JS.";
-
 const publishNightly = () => exec("npm", ["publish", "--tag", "next"]);
 task("publish-nightly", series(task("clean"), task("LKG"), task("clean"), task("runtests-parallel"), publishNightly));
 task("publish-nightly").description = "Runs `npm publish --tag next` to create a new nightly build on npm";
diff --git a/scripts/configureLanguageServiceBuild.ts b/scripts/configureLanguageServiceBuild.ts
deleted file mode 100644
index 41d189f5b8..0000000000
--- a/scripts/configureLanguageServiceBuild.ts
+++ /dev/null
@@ -1,87 +0,0 @@
-/// <reference types="node"/>
-import { normalize, dirname, join } from "path";
-import { readFileSync, writeFileSync, unlinkSync, existsSync } from "fs";
-import * as assert from "assert";
-import { execSync } from "child_process";
-const args = process.argv.slice(2);
-
-/**
- * A minimal description for a parsed package.json object.
- */
-interface PackageJson {
-    name: string;
-    bin?: {};
-    main: string;
-    scripts: {
-        prepare?: string
-        postpublish?: string
-    }
-}
-
-function main(): void {
-    if (args.length < 1) {
-        console.log("Usage:");
-        console.log("\tnode configureTSCBuild.js <package.json location>");
-        return;
-    }
-
-    // Acquire the version from the package.json file and modify it appropriately.
-    const packageJsonFilePath = normalize(args[0]);
-    const packageJsonValue: PackageJson = JSON.parse(readFileSync(packageJsonFilePath).toString());
-
-    // Remove the bin section from the current package
-    delete packageJsonValue.bin;
-    // We won't be running eslint which would run before publishing
-    delete packageJsonValue.scripts.prepare;
-    // No infinite loops
-    delete packageJsonValue.scripts.postpublish;
-
-    // Set the new name
-    packageJsonValue.name = "@typescript/language-services";
-
-    writeFileSync(packageJsonFilePath, JSON.stringify(packageJsonValue, /*replacer:*/ undefined, /*space:*/ 4));
-
-    // Remove the files which aren't use when just using the API
-    const toRemove = [
-        // JS Files
-        "tsserver.js",
-        "tsserverlibrary.js",
-        "typescriptServices.js",
-        "typingsInstaller.js",
-        "tsc.js",
-        // DTS files
-        "typescriptServices.d.ts",
-        "tsserverlibrary.d.ts"
-    ];
-
-    // Get a link to the main dependency JS file
-    const lib = join(dirname(packageJsonFilePath), packageJsonValue.main);
-    const libPath = dirname(lib);
-
-    // Remove the sibling JS large files referenced above
-    toRemove.forEach(file => {
-        const path = join(libPath, file);
-        if (existsSync(path)) unlinkSync(path);
-    });
-
-    // Remove VS-specific localization keys
-    execSync("rm -rf loc", { cwd: dirname(packageJsonFilePath) });
-
-    // Remove runnable file reference
-    execSync("rm -rf bin", { cwd: dirname(packageJsonFilePath) });
-
-    ///////////////////////////////////
-
-    // This section verifies that the build of TypeScript compiles and emits
-
-    const ts = require(lib);
-    const source = "let x: string = 'string'";
-
-    const results = ts.transpileModule(source, {
-        compilerOptions: { module: ts.ModuleKind.CommonJS }
-    });
-
-    assert(results.outputText.trim() === "var x = 'string';", `Running typescript with ${packageJsonValue.name} did not return the expected results, got: ${results.outputText}`);
-}
-
-main();
-- 
2.37.3

