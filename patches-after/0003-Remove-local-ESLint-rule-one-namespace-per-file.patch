From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Bailey <5341706+jakebailey@users.noreply.github.com>
Date: Wed, 7 Sep 2022 15:09:39 -0700
Subject: [PATCH] Remove local ESLint rule one-namespace-per-file

Now that we are modules, there's no reason to ban multiple namespaces
per file; each file is its own scope and declaring a namespace won't
merge it into any other files.
---
 .eslintrc.json                                |  1 -
 .../eslint/rules/one-namespace-per-file.cjs   | 45 -------------------
 2 files changed, 46 deletions(-)
 delete mode 100644 scripts/eslint/rules/one-namespace-per-file.cjs

diff --git a/.eslintrc.json b/.eslintrc.json
index 35901b1201..c3ce2174a7 100644
--- a/.eslintrc.json
+++ b/.eslintrc.json
@@ -87,7 +87,6 @@
         "local/simple-indent": "error",
         "local/debug-assert": "error",
         "local/no-keywords": "error",
-        "local/one-namespace-per-file": "error",
 
         // eslint-plugin-import
         "import/no-extraneous-dependencies": ["error", { "optionalDependencies": false }],
diff --git a/scripts/eslint/rules/one-namespace-per-file.cjs b/scripts/eslint/rules/one-namespace-per-file.cjs
deleted file mode 100644
index 2b8772005a..0000000000
--- a/scripts/eslint/rules/one-namespace-per-file.cjs
+++ /dev/null
@@ -1,45 +0,0 @@
-const { AST_NODE_TYPES, TSESTree } = require("@typescript-eslint/utils");
-const { createRule } = require("./utils.cjs");
-
-module.exports = createRule({
-    name: "one-namespace-per-file",
-    meta: {
-        docs: {
-            description: `Limits each file to having at most one top-level namespace declaration`,
-            recommended: "error",
-        },
-        messages: {
-            excessNamespaceError: `All but one of these namespaces should be moved into separate files.`,
-        },
-        schema: [],
-        type: "problem",
-    },
-    defaultOptions: [],
-
-    create(context) {
-        /** @type {(node: TSESTree.Node) => node is TSESTree.TSModuleDeclaration} */
-        const isNamespaceDeclaration = (node) => node.type === AST_NODE_TYPES.TSModuleDeclaration;
-
-        /** @type {(node: TSESTree.Program) => void} */
-        const checkSourceFile = (node) => {
-            if (context.getFilename().endsWith(".d.ts")) {
-                return;
-            }
-            const members = node.body;
-            const namespaces = members.filter(isNamespaceDeclaration);
-            if (namespaces.length <= 1) {
-                return;
-            }
-
-            namespaces.forEach(n => {
-                context.report({
-                    messageId: "excessNamespaceError", node: n
-                });
-            });
-        };
-
-        return {
-            Program: checkSourceFile,
-        };
-    },
-});
-- 
2.38.1

