From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Bailey <5341706+jakebailey@users.noreply.github.com>
Date: Fri, 14 Oct 2022 15:21:44 -0700
Subject: [PATCH] Just delete built in clean task, remove unreferenced clean
 tasks

---
 Herebyfile.mjs | 61 +++++++-------------------------------------------
 1 file changed, 8 insertions(+), 53 deletions(-)

diff --git a/Herebyfile.mjs b/Herebyfile.mjs
index 166ae202e2..7f73483835 100644
--- a/Herebyfile.mjs
+++ b/Herebyfile.mjs
@@ -27,10 +27,6 @@ function getCopyrightHeader() {
 }
 
 
-/** @type {ReturnType<typeof task>[]} */
-const cleanTasks = [];
-
-
 // TODO(jakebailey): This is really gross. If the build is cancelled (i.e. Ctrl+C), the modification will persist.
 // Waiting on: https://github.com/microsoft/TypeScript/issues/51164
 let currentlyBuilding = 0;
@@ -106,7 +102,6 @@ const cleanLib = task({
     hiddenFromTaskList: true,
     run: () => del(libs.map(lib => lib.target)),
 });
-cleanTasks.push(cleanLib);
 
 
 const diagnosticInformationMapTs = "src/compiler/diagnosticInformationMap.generated.ts";
@@ -127,7 +122,6 @@ const cleanDiagnostics = task({
     hiddenFromTaskList: true,
     run: () => del([diagnosticInformationMapTs, diagnosticMessagesGeneratedJson]),
 });
-cleanTasks.push(cleanDiagnostics);
 
 
 // Localize diagnostics
@@ -304,13 +298,6 @@ const buildDebugTools = task({
     run: () => cmdLineOptions.bundle ? esbuildDebugTools.build() : buildProject("src/debug"),
 });
 
-const cleanDebugTools = task({
-    name: "clean-debug-tools",
-    hiddenFromTaskList: true,
-    run: () => cmdLineOptions.bundle ? esbuildDebugTools.build() : cleanProject("src/debug")
-});
-cleanTasks.push(cleanDebugTools);
-
 
 const esbuildTsc = esbuildTask("./src/tsc/tsc.ts", "./built/local/tsc.js");
 
@@ -331,7 +318,6 @@ export const cleanTsc = task({
     hiddenFromTaskList: true,
     run: () => cmdLineOptions.bundle ? esbuildTsc.clean() : cleanProject("src/tsc"),
 });
-cleanTasks.push(cleanTsc);
 
 const buildServicesWithTsc = task({
     name: "services-src",
@@ -359,7 +345,6 @@ export const cleanServices = task({
     hiddenFromTaskList: true,
     run: () => cmdLineOptions.bundle ? esbuildServices.clean() : cleanProject("src/typescript"),
 });
-cleanTasks.push(cleanServices);
 
 
 export const dtsServices = task({
@@ -388,7 +373,6 @@ export const cleanServer = task({
     hiddenFromTaskList: true,
     run: () => cmdLineOptions.bundle ? esbuildServer.clean() : cleanProject("src/tsserver"),
 });
-cleanTasks.push(cleanServer);
 
 
 export const min = task({
@@ -428,7 +412,6 @@ export const cleanLssl = task({
     hiddenFromTaskList: true,
     run: () => cmdLineOptions.bundle ? esbuildLssl.clean() : cleanProject("src/tsserverlibrary"),
 });
-cleanTasks.push(cleanLssl);
 
 export const dtsLssl = task({
     name: "dts-lssl",
@@ -471,7 +454,6 @@ export const cleanTests = task({
     hiddenFromTaskList: true,
     run: () => cmdLineOptions.bundle ? esbuildTests.clean() : cleanProject("src/testRunner"),
 });
-cleanTasks.push(cleanTests);
 
 
 
@@ -517,12 +499,6 @@ const buildCancellationToken = task({
         await buildProject("src/cancellationToken");
     },
 });
-const cleanCancellationToken = task({
-    name: "clean-cancellation-token",
-    hiddenFromTaskList: true,
-    run: () => cmdLineOptions.bundle ? esbuildCancellationToken.clean() : cleanProject("src/cancellationToken"),
-});
-cleanTasks.push(cleanCancellationToken);
 
 const esbuildTypingsInstaller = esbuildTask("./src/typingsInstaller/nodeTypingsInstaller.ts", "./built/local/typingsInstaller.js");
 
@@ -535,12 +511,7 @@ const buildTypingsInstaller = task({
         await buildProject("src/typingsInstaller");
     },
 });
-const cleanTypingsInstaller = task({
-    name: "clean-typings-installer",
-    hiddenFromTaskList: true,
-    run: () => cmdLineOptions.bundle ? esbuildTypingsInstaller.clean() : cleanProject("src/typingsInstaller"),
-});
-cleanTasks.push(cleanTypingsInstaller);
+
 
 const esbuildWatchGuard = esbuildTask("./src/watchGuard/watchGuard.ts", "./built/local/watchGuard.js");
 
@@ -553,12 +524,7 @@ const buildWatchGuard = task({
         await buildProject("src/watchGuard");
     },
 });
-const cleanWatchGuard = task({
-    name: "clean-watch-guard",
-    hiddenFromTaskList: true,
-    run: () => cmdLineOptions.bundle ? esbuildWatchGuard.clean() : cleanProject("src/watchGuard"),
-});
-cleanTasks.push(cleanWatchGuard);
+
 
 export const generateTypesMap = task({
     name: "generate-types-map",
@@ -571,12 +537,6 @@ export const generateTypesMap = task({
     }
 });
 
-const cleanTypesMap = task({
-    name: "clean-types-map",
-    hiddenFromTaskList: true,
-    run: () => del("built/local/typesMap.json"),
-});
-cleanTasks.push(cleanTypesMap);
 
 // Drop a copy of diagnosticMessages.generated.json into the built/local folder. This allows
 // it to be synced to the Azure DevOps repo, so that it can get picked up by the build
@@ -592,12 +552,6 @@ const copyBuiltLocalDiagnosticMessages = task({
     }
 });
 
-const cleanBuiltLocalDiagnosticMessages = task({
-    name: "clean-built-local-diagnostic-messages",
-    hiddenFromTaskList: true,
-    run: () => del(builtLocalDiagnosticMessagesGeneratedJson),
-});
-cleanTasks.push(cleanBuiltLocalDiagnosticMessages);
 
 export const buildOtherOutputs = task({
     name: "other-outputs",
@@ -780,14 +734,15 @@ export const generateSpec = task({
     run: () => exec("cscript", ["//nologo", "scripts/word2md.mjs", path.resolve("doc/TypeScript Language Specification - ARCHIVED.docx"), path.resolve("doc/spec-ARCHIVED.md")]),
 });
 
-// TODO(jakebailey): this seems silly; most tasks in cleanTasks just remove
-// things in built, only to just remove built anyway. Instead just depend on
-// cleaning built and the diagnostics in src?
+const cleanBuilt = task({
+    name: "clean-built",
+    run: () => del("built"),
+});
+
 export const clean = task({
     name: "clean",
     description: "Cleans build outputs",
-    dependencies: cleanTasks,
-    run: () => del("built"),
+    dependencies: [cleanBuilt, cleanDiagnostics],
 });
 
 export const configureNightly = task({
-- 
2.38.0

