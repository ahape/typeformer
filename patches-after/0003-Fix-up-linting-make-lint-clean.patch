From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Bailey <5341706+jakebailey@users.noreply.github.com>
Date: Wed, 7 Sep 2022 15:09:39 -0700
Subject: [PATCH] Fix up linting, make lint clean

Now that we are modules, there's no reason to ban multiple namespaces
per file; each file is its own scope and declaring a namespace won't
merge it into any other files.
---
 .eslintrc.json                                |  1 -
 .../eslint/rules/one-namespace-per-file.cjs   | 45 -------------------
 src/compiler/tracing.ts                       |  3 +-
 src/loggedIO/loggedIO.ts                      |  1 -
 src/server/editorServices.ts                  |  2 +-
 src/server/session.ts                         |  2 +-
 src/services/utilities.ts                     |  4 +-
 src/testRunner/parallel/host.ts               |  7 ++-
 8 files changed, 8 insertions(+), 57 deletions(-)
 delete mode 100644 scripts/eslint/rules/one-namespace-per-file.cjs

diff --git a/.eslintrc.json b/.eslintrc.json
index 35901b1201..c3ce2174a7 100644
--- a/.eslintrc.json
+++ b/.eslintrc.json
@@ -87,7 +87,6 @@
         "local/simple-indent": "error",
         "local/debug-assert": "error",
         "local/no-keywords": "error",
-        "local/one-namespace-per-file": "error",
 
         // eslint-plugin-import
         "import/no-extraneous-dependencies": ["error", { "optionalDependencies": false }],
diff --git a/scripts/eslint/rules/one-namespace-per-file.cjs b/scripts/eslint/rules/one-namespace-per-file.cjs
deleted file mode 100644
index 2b8772005a..0000000000
--- a/scripts/eslint/rules/one-namespace-per-file.cjs
+++ /dev/null
@@ -1,45 +0,0 @@
-const { AST_NODE_TYPES, TSESTree } = require("@typescript-eslint/utils");
-const { createRule } = require("./utils.cjs");
-
-module.exports = createRule({
-    name: "one-namespace-per-file",
-    meta: {
-        docs: {
-            description: `Limits each file to having at most one top-level namespace declaration`,
-            recommended: "error",
-        },
-        messages: {
-            excessNamespaceError: `All but one of these namespaces should be moved into separate files.`,
-        },
-        schema: [],
-        type: "problem",
-    },
-    defaultOptions: [],
-
-    create(context) {
-        /** @type {(node: TSESTree.Node) => node is TSESTree.TSModuleDeclaration} */
-        const isNamespaceDeclaration = (node) => node.type === AST_NODE_TYPES.TSModuleDeclaration;
-
-        /** @type {(node: TSESTree.Program) => void} */
-        const checkSourceFile = (node) => {
-            if (context.getFilename().endsWith(".d.ts")) {
-                return;
-            }
-            const members = node.body;
-            const namespaces = members.filter(isNamespaceDeclaration);
-            if (namespaces.length <= 1) {
-                return;
-            }
-
-            namespaces.forEach(n => {
-                context.report({
-                    messageId: "excessNamespaceError", node: n
-                });
-            });
-        };
-
-        return {
-            Program: checkSourceFile,
-        };
-    },
-});
diff --git a/src/compiler/tracing.ts b/src/compiler/tracing.ts
index b7234531b1..9ec10f1d90 100644
--- a/src/compiler/tracing.ts
+++ b/src/compiler/tracing.ts
@@ -7,14 +7,13 @@ import {
 
 /* Tracing events for the compiler. */
 
-// eslint-disable-line local/one-namespace-per-file
 // should be used as tracing?.___
 /** @internal */
 export let tracing: typeof tracingEnabled | undefined;
 // enable the above using startTracing()
 
 // `tracingEnabled` should never be used directly, only through the above
-namespace tracingEnabled { // eslint-disable-line local/one-namespace-per-file
+namespace tracingEnabled {
     type Mode = "project" | "build" | "server";
 
     let fs: typeof import("fs");
diff --git a/src/loggedIO/loggedIO.ts b/src/loggedIO/loggedIO.ts
index 5333de4371..f3450a2bc0 100644
--- a/src/loggedIO/loggedIO.ts
+++ b/src/loggedIO/loggedIO.ts
@@ -1,7 +1,6 @@
 import * as ts from "./_namespaces/ts";
 import * as Harness from "./_namespaces/Harness";
 
-// eslint-disable-line local/one-namespace-per-file
 interface FileInformation {
     contents?: string;
     contentsPath?: string;
diff --git a/src/server/editorServices.ts b/src/server/editorServices.ts
index 833c970de8..b59a533db1 100644
--- a/src/server/editorServices.ts
+++ b/src/server/editorServices.ts
@@ -2079,7 +2079,7 @@ export class ProjectService {
             configFileName: configFileName(),
             projectType: project instanceof ExternalProject ? "external" : "configured",
             languageServiceEnabled: project.languageServiceEnabled,
-            version: version, // eslint-disable-line @typescript-eslint/no-unnecessary-qualifier
+            version,
         };
         this.eventHandler({ eventName: ProjectInfoTelemetryEvent, data });
 
diff --git a/src/server/session.ts b/src/server/session.ts
index 8c44dba74f..1a3d38309f 100644
--- a/src/server/session.ts
+++ b/src/server/session.ts
@@ -2953,7 +2953,7 @@ export class Session<TMessage = string> implements EventSender {
 
     private handlers = new Map(getEntries<(request: protocol.Request) => HandlerResponse>({
         [CommandNames.Status]: () => {
-            const response: protocol.StatusResponseBody = { version: version }; // eslint-disable-line @typescript-eslint/no-unnecessary-qualifier
+            const response: protocol.StatusResponseBody = { version };
             return this.requiredResponse(response);
         },
         [CommandNames.OpenExternalProject]: (request: protocol.OpenExternalProjectRequest) => {
diff --git a/src/services/utilities.ts b/src/services/utilities.ts
index 5d23a2c461..9edfd86931 100644
--- a/src/services/utilities.ts
+++ b/src/services/utilities.ts
@@ -75,8 +75,8 @@ declare global {
 declare global {
     // Module transform: converted from ambient declaration
     /** @internal */
-    var Promise: PromiseConstructor;
-} // eslint-disable-line no-var
+    var Promise: PromiseConstructor; // eslint-disable-line no-var
+}
 
 // These utilities are common to multiple language service features.
 //#region
diff --git a/src/testRunner/parallel/host.ts b/src/testRunner/parallel/host.ts
index e866456799..f38081ccab 100644
--- a/src/testRunner/parallel/host.ts
+++ b/src/testRunner/parallel/host.ts
@@ -249,7 +249,7 @@ export function start() {
         let totalPassing = 0;
         const startDate = new Date();
 
-        const progressBars = new ProgressBars({ noColors: noColors }); // eslint-disable-line @typescript-eslint/no-unnecessary-qualifier
+        const progressBars = new ProgressBars({ noColors });
         const progressUpdateInterval = 1 / progressBars._options.width;
         let nextProgress = progressUpdateInterval;
 
@@ -259,7 +259,7 @@ export function start() {
         let closedWorkers = 0;
         for (let i = 0; i < workerCount; i++) {
             // TODO: Just send the config over the IPC channel or in the command line arguments
-            const config: TestConfig = { light: lightMode, listenForWork: true, runUnitTests: runUnitTests, stackTraceLimit: stackTraceLimit, timeout: globalTimeout }; // eslint-disable-line @typescript-eslint/no-unnecessary-qualifier
+            const config: TestConfig = { light: lightMode, listenForWork: true, runUnitTests, stackTraceLimit, timeout: globalTimeout };
             const configPath = ts.combinePaths(taskConfigsFolder, `task-config${i}.json`);
             IO.writeFile(configPath, JSON.stringify(config));
             const worker: Worker = {
@@ -558,8 +558,7 @@ export function start() {
                 failedTestReporter = new FailedTestReporter(replayRunner, {
                     reporterOptions: {
                         file: path.resolve(".failed-tests"),
-                        keepFailed: keepFailed // eslint-disable-line @typescript-eslint/no-unnecessary-qualifier
- // eslint-disable-line @typescript-eslint/no-unnecessary-qualifier
+                        keepFailed,
                     }
                 });
             }
-- 
2.38.1

