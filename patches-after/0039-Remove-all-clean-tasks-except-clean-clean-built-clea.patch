From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Bailey <5341706+jakebailey@users.noreply.github.com>
Date: Fri, 14 Oct 2022 15:25:22 -0700
Subject: [PATCH] Remove all clean tasks except clean, clean-built,
 clean-diagnostics

---
 Herebyfile.mjs | 51 +++-----------------------------------------------
 1 file changed, 3 insertions(+), 48 deletions(-)

diff --git a/Herebyfile.mjs b/Herebyfile.mjs
index 7f73483835..12d73b0f4a 100644
--- a/Herebyfile.mjs
+++ b/Herebyfile.mjs
@@ -97,12 +97,6 @@ export const generateLibs = task({
     },
 });
 
-const cleanLib = task({
-    name: "clean-lib",
-    hiddenFromTaskList: true,
-    run: () => del(libs.map(lib => lib.target)),
-});
-
 
 const diagnosticInformationMapTs = "src/compiler/diagnosticInformationMap.generated.ts";
 const diagnosticMessagesJson = "src/compiler/diagnosticMessages.json";
@@ -156,6 +150,7 @@ export const buildSrc = task({
 
 export const cleanSrc = task({
     name: "clean-src",
+    hiddenFromTaskList: true,
     run: () => cleanProject("src"),
 });
 
@@ -274,7 +269,6 @@ async function runDtsBundler(entrypoint, output) {
 
             await esbuild.build(options);
         },
-        clean: () => del([outfile, `${outfile}.map`]),
     };
 }
 
@@ -312,12 +306,6 @@ export const buildTsc = task({
     }
 });
 
-export const cleanTsc = task({
-    name: "clean-tsc",
-    description: "Cleans outputs for the command-line compiler",
-    hiddenFromTaskList: true,
-    run: () => cmdLineOptions.bundle ? esbuildTsc.clean() : cleanProject("src/tsc"),
-});
 
 const buildServicesWithTsc = task({
     name: "services-src",
@@ -339,13 +327,6 @@ export const buildServices = task({
     }
 });
 
-export const cleanServices = task({
-    name: "clean-services",
-    description: "Cleans outputs for the language service",
-    hiddenFromTaskList: true,
-    run: () => cmdLineOptions.bundle ? esbuildServices.clean() : cleanProject("src/typescript"),
-});
-
 
 export const dtsServices = task({
     name: "dts-services",
@@ -367,13 +348,6 @@ export const buildServer = task({
     }
 });
 
-export const cleanServer = task({
-    name: "clean-tsserver",
-    description: "Cleans outputs for the language server",
-    hiddenFromTaskList: true,
-    run: () => cmdLineOptions.bundle ? esbuildServer.clean() : cleanProject("src/tsserver"),
-});
-
 
 export const min = task({
     name: "min",
@@ -381,12 +355,6 @@ export const min = task({
     dependencies: [buildTsc, buildServer],
 });
 
-export const cleanMin = task({
-    name: "clean-min",
-    description: "Cleans outputs for tsc and tsserver",
-    hiddenFromTaskList: true,
-    dependencies: [cleanTsc, cleanServer],
-});
 
 const buildLsslWithTsc = task({
     name: "lssl-src",
@@ -406,12 +374,6 @@ export const buildLssl = task({
     },
 });
 
-export const cleanLssl = task({
-    name: "clean-lssl",
-    description: "Clean outputs for the language service server library",
-    hiddenFromTaskList: true,
-    run: () => cmdLineOptions.bundle ? esbuildLssl.clean() : cleanProject("src/tsserverlibrary"),
-});
 
 export const dtsLssl = task({
     name: "dts-lssl",
@@ -448,14 +410,6 @@ export const buildTests = task({
     },
 });
 
-export const cleanTests = task({
-    name: "clean-tests",
-    description: "Cleans the outputs for the test infrastructure",
-    hiddenFromTaskList: true,
-    run: () => cmdLineOptions.bundle ? esbuildTests.clean() : cleanProject("src/testRunner"),
-});
-
-
 
 export const runEslintRulesTests = task({
     name: "run-eslint-rules-tests",
@@ -734,8 +688,9 @@ export const generateSpec = task({
     run: () => exec("cscript", ["//nologo", "scripts/word2md.mjs", path.resolve("doc/TypeScript Language Specification - ARCHIVED.docx"), path.resolve("doc/spec-ARCHIVED.md")]),
 });
 
-const cleanBuilt = task({
+export const cleanBuilt = task({
     name: "clean-built",
+    hiddenFromTaskList: true,
     run: () => del("built"),
 });
 
-- 
2.38.0

